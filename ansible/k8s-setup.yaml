- name: Setup single-node Kubernetes host on Ubuntu
  hosts: k8s_host
  become: yes

  tasks:
    # -----------------------
    # System prep
    # -----------------------
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install base utilities
      apt:
        name:
          - curl
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
          - socat
          - conntrack
          - ebtables
          - ethtool
          - unzip
        state: present

    # -----------------------
    # Docker installation
    # -----------------------
    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Ensure Docker is started and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    # -----------------------
    # Swap and networking
    # -----------------------
    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb | int > 0

    - name: Remove swap from fstab
      replace:
        path: /etc/fstab
        regexp: '^\s*([^#]\S*\s+)\S+\s+swap\s+'
        replace: '# \1 none swap sw 0 0'

    - name: Ensure br_netfilter is enabled
      modprobe:
        name: br_netfilter
        state: present

    - name: Set sysctl for Kubernetes networking
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: Apply sysctl settings
      command: sysctl --system

    # -----------------------
    # Kubernetes installation
    # -----------------------
    - name: Add Kubernetes GPG key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        keyring: /usr/share/keyrings/kubernetes-apt-keyring.gpg
        state: present

    - name: Add Kubernetes apt repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        filename: kubernetes
        state: present

    - name: Update apt cache after adding Kubernetes repo
      apt:
        update_cache: yes

    - name: Install kubelet, kubeadm, kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold kube packages to prevent auto-updates
      apt:
        name: "{{ item }}"
        state: present
       
      loop:
        - kubelet
        - kubeadm
        - kubectl

    # -----------------------
    # Initialize Kubernetes
    # -----------------------
    - name: Initialize Kubernetes control-plane (single node)
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Create kube config for ubuntu user
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: yes
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Install Flannel CNI
  become_user: ubuntu
  command: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  environment:
    KUBECONFIG: /home/ubuntu/.kube/config

- name: Remove master taint to allow scheduling pods
  become_user: ubuntu
  command: kubectl taint nodes --all node-role.kubernetes.io/control-plane- || true
  environment:
    KUBECONFIG: /home/ubuntu/.kube/config

- name: Install Helm
  shell: curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  args:
    creates: /usr/local/bin/helm






